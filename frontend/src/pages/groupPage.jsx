import { useQuery, gql } from "@apollo/client";
const jwt = require("jsonwebtoken");
import { useEffect } from "react";
import Link from "next/link";
import { getItem } from "@/utils/localStorage";
import Head from "next/head";
import Header from "@/components/header";
import ProfileDisplay from "@/components/profileDisplay";
import RecentGroups from "@/components/recentGroups";
import FriendList from "@/components/friendList";
import EventList from "@/components/eventList";
import { Image } from "next/image";
import { HiOutlineUserGroup } from "react-icons/hi";
import {VscLoading, VscError } from "react-icons/vsc";

const GET_USER_GROUPS = gql`
  query buscarGrupoUsuario($usuario: ID!) {
    buscarGrupoUsuario(usuario: $usuario) {
      id
      nombre
      descripcion
      icono
      banner
    }
  }
`;

function GroupPage() {
  const token = getItem("token");
  console.log("token", token);

  let decoded;
  try {
    decoded = jwt.decode(token);
    console.log("decoded", decoded);
  } catch (error) {
    console.log("error", error);
  }

  const { loading, error, data } = useQuery(GET_USER_GROUPS, {
    variables: { usuario: decoded ? decoded.id : null },
  });

  useEffect(() => {
    if (error) {
      console.log("error", error);
    }
  }, [error]);

  if (loading) {
    return (
      <div className="bg-[#e2e2e2]  dark:bg-[#03001C]">
        <Head>
          <title>RC UBB</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <script></script>

        <main className="min-h-screen ">
          {/* Header */}
          <Header className="sticky top-0" />

          {/* content */}
          <div className=" grid  w-screen grid-flow-col grid-cols-5 ">
            {/* Perfil y grupos recientes(?) */}
            <div className="col-span-1  m-2 hidden h-fit flex-col rounded-md p-2 text-black  shadow-xl lg:flex">
              {/* perfil */}
              <ProfileDisplay />

              {/* grupos recientes */}
              <RecentGroups />
            </div>

            {/* Publicaciones / feed */}
            <div className="bg-slate- col-span-5 p-2 transition-all delay-75 duration-300  ease-in-out lg:col-span-3">
              {/* groups Cards*/}
              <div className="grid grid-cols-1 gap-2 p-2">
                <div className="col-span-1  flex-col rounded-md bg-accentDarkColor p-2  text-black shadow-xl lg:flex">
                  <div className="rounded-md  p-2 text-[#a9dacb]">
                    <h1 className="text-3xl font-semibold">Grupos</h1>
                  </div>
                  <div className="grid grid-cols-1 gap-2 p-2">
                    <div className="flex flex-row justify-center rounded-md  bg-bgDarkColorTrasparent p-2 dark:text-[#a9dacb]">
                      <VscLoading className="animate-spin text-3xl" />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className="col-span-1  hidden  flex-col rounded-md  p-2   shadow-xl lg:flex">
              {/* lista de enventos */}
              <EventList />
              {/* Lista de amigos */}
              <FriendList />
            </div>
          </div>

          {/* chat */}
          <div className=" fixed bottom-1 right-4  h-10 w-48 rounded-md bg-white dark:bg-[#231842] dark:text-[#a9dacb] ">
            <div className="bg-slate flex flex-col p-2">
              <h1 className="font-semibold">Chat</h1>
            </div>
          </div>
        </main>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-[#e2e2e2]  dark:bg-[#03001C]">
        <Head>
          <title>RC UBB</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <script></script>

        <main className="min-h-screen ">
          {/* Header */}
          <Header className="sticky top-0" />

          {/* content */}
          <div className=" grid  w-screen grid-flow-col grid-cols-5 ">
            {/* Perfil y grupos recientes(?) */}
            <div className="col-span-1  m-2 hidden h-fit flex-col rounded-md p-2 text-black  shadow-xl lg:flex">
              {/* perfil */}
              <ProfileDisplay />

              {/* grupos recientes */}
              <RecentGroups />
            </div>

            {/* Publicaciones / feed */}
            <div className="bg-slate- col-span-5 p-2 transition-all delay-75 duration-300  ease-in-out lg:col-span-3">
              {/* groups Cards*/}
              <div className="grid grid-cols-1 gap-2 p-2">
                <div className="col-span-1  flex-col rounded-md bg-accentDarkColor p-2  text-black shadow-xl lg:flex">
                  <div className="rounded-md  p-2 text-[#a9dacb]">
                    <h1 className="text-3xl font-semibold">Grupos</h1>
                  </div>
                  <div className="grid grid-cols-1 gap-2 p-2">
                    <div className="flex flex-row justify-center gap-2 rounded-md  bg-bgDarkColorTrasparent p-2 dark:text-[#a9dacb]">
                      <VscError className="animate-bounce text-3xl" />
                      <p>
                        Error: {error.message}
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className="col-span-1  hidden  flex-col rounded-md  p-2   shadow-xl lg:flex">
              {/* lista de enventos */}
              <EventList />
              {/* Lista de amigos */}
              <FriendList />
            </div>
          </div>

          {/* chat */}
          <div className=" fixed bottom-1 right-4  h-10 w-48 rounded-md bg-white dark:bg-[#231842] dark:text-[#a9dacb] ">
            <div className="bg-slate flex flex-col p-2">
              <h1 className="font-semibold">Chat</h1>
            </div>
          </div>
        </main>
      </div>
    )
  }

  console.log("grupos", data);
  const { groups } = data;
  console.log("{groups}", groups);

  function iconRender(icon) {
    if (icon.icono === null) {
      return <HiOutlineUserGroup className="text-3xl" />;
    }
    // return <GrGroup className="text-3xl" />;
    // console.log("icon", toString(icon.icono));
    return (
      <img src={icon.icono} width={40} height={40} className="rounded-full max-h-10" />
    );
  }

  return (
    <div className="bg-[#e2e2e2]  dark:bg-[#03001C]">
      <Head>
        <title>RC UBB</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <script></script>

      <main className="min-h-screen ">
        {/* Header */}
        <Header className="sticky top-0" />

        {/* content */}
        <div className=" grid  w-screen grid-flow-col grid-cols-5 ">
          {/* Perfil y grupos recientes(?) */}
          <div className="col-span-1  m-2 hidden h-fit flex-col rounded-md p-2 text-black  shadow-xl lg:flex">
            {/* perfil */}
            <ProfileDisplay />

            {/* grupos recientes */}
            <RecentGroups />
          </div>

          {/* Publicaciones / feed */}
          <div className="bg-slate- col-span-5 p-2 transition-all delay-75 duration-300  ease-in-out lg:col-span-3">
            {/* groups Cards*/}
            <div className="grid grid-cols-1 gap-2 p-2">
              <div className="col-span-1  flex-col rounded-md bg-accentDarkColor p-2  text-black shadow-xl lg:flex">
                <div className="rounded-md  p-2 text-[#a9dacb]">
                  <h1 className="text-3xl font-semibold">Grupos</h1>
                </div>
                <div className="grid grid-cols-1 gap-2 p-2">
                  {data?.buscarGrupoUsuario.map((group) => (
                    <div
                      className="flex flex-row justify-between rounded-md  bg-bgDarkColorTrasparent p-2 dark:text-[#a9dacb]"
                      key={group.id}
                    >
                      {/* icono del grupo */}
                      <div className="flex ">
                        <div className="m-2 flex items-center justify-center">
                          {iconRender(group)}
                        </div>
                        <div>
                          <h2 className="text-2xl font-semibold">
                            {group.nombre}
                          </h2>
                          <p>{group.descripcion}</p>
                        </div>
                      </div>
                      {/* Agrega un botón o enlace para redirigir a la página del grupo */}
                      <div className="m-2 flex items-center justify-center">
                        <Link
                          href={`/${group.id}/home`}
                          className="text-xl font-semibold"
                        >
                          Ir al grupo
                        </Link>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
          <div className="col-span-1  hidden  flex-col rounded-md  p-2   shadow-xl lg:flex">
            {/* lista de enventos */}
            <EventList />
            {/* Lista de amigos */}
            <FriendList />
          </div>
        </div>

        {/* chat */}
        <div className=" fixed bottom-1 right-4  h-10 w-48 rounded-md bg-white dark:bg-[#231842] dark:text-[#a9dacb] ">
          <div className="bg-slate flex flex-col p-2">
            <h1 className="font-semibold">Chat</h1>
          </div>
        </div>
      </main>
    </div>
  );
}

export default GroupPage;
